# This is the Continuous Deployment (CD) / Release workflow for the kds project.
# It now automatically bumps the version in package.json, updates the changelog,
# commits the changes, and then runs GoReleaser.
name: Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v2.1.3, etc.

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository's code.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'master' # Explicitly check out the master branch
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      # Step 2: Set up Git committer identity.
      - name: Set up Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Set up Go environment.
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      # Step 4: Set up Node.js environment.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Step 5: Install Node.js dependencies.
      - name: Install npm dependencies
        run: npm ci

      # Step 6: Bump version in package.json
      - name: Bump version in package.json
        run: |
          VERSION=${{ github.ref_name }}
          VERSION=${VERSION#v}
          npm version --no-git-tag-version "$VERSION"
          
      # Step 7: Generate the changelog file.
      - name: Generate Changelog
        run: npm run changelog

      # Step 8: Commit the updated version and changelog files.
      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(release): bump version to ${{ github.ref_name }} and update changelog"
          branch: master
          file_pattern: 'package.json package-lock.json CHANGELOG.md'
          repository: .

      # Step 9: Set up QEMU and Docker Buildx (for GoReleaser).
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        # --- THIS IS THE FIX ---
        # The latest stable version is v3, not v4.
        uses: docker/setup-buildx-action@v3

      # Step 10: Run GoReleaser.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}