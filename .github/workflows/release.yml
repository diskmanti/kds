# Simplified Release workflow.
# It runs ONLY when a new git tag matching 'v*' is pushed.
# It builds, packages, and releases the application using GoReleaser.
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository's code.
      # fetch-depth: 0 is still needed for GoReleaser to generate a changelog.
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Step 2: Set up the Go environment.
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      # Step 3: Set up QEMU and Docker Buildx (best practice for multi-platform builds).
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Run GoReleaser.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          # The GITHUB_TOKEN is sufficient for GoReleaser's needs.
          # You no longer need a PAT secret.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}